# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
    - name: Build Conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: test-environment
        environment-file: 
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false
    - name: Install python dependencies
      run: |
        conda info
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r docs/requirements.txt
        pip install .
    # - name: Install Miniconda
    #   run: |
    #     wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    #     bash miniconda.sh -b -p $HOME/miniconda
    #     export PATH="$HOME/miniconda/bin:$PATH"
    #     hash -r
    #     conda config --set always_yes yes --set changeps1 no
    #     conda update -q conda
    #     conda info -a

    # - name: Create Conda environment
    #   run: |
    #     conda create -q -n test-environment python=${{ matrix.python-version }}
    #     conda install -n test-environment -c conda-forge pypandoc sphinx numpydoc
    #     conda init --all
    #     conda activate test-environment
    #     pip install --upgrade pip
    #     pip install -r requirements.txt
    #     pip install -r docs/requirements.txt
    #     pip install .
    - name: Lint with flake8
      run: |
        conda info
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda info
        pytest ./test
    